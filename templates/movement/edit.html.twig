{% extends 'base.html.twig' %}

{% block title %}Modifier le Mouvement{% endblock %}

{% block body %}
    {% include '_partials/_flush.html.twig' %}
    <main class="flex flex-col gap-4 md:gap-5 h-auto pb-5">
        <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
                <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
                    Modifier le Mouvement
                </h1>

                {{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            {{ form_row(form.type, {
                                'label': 'Type de Mouvement',
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                                'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                            }) }}
                        </div>
                        <div>
                            {{ form_row(form.quantity, {
                                'label': 'Quantité',
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                                'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                            }) }}
                        </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            {{ form_row(form.category, {
                                'label': 'Catégorie',
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                                'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                            }) }}
                        </div>
                        <div>
                            {{ form_row(form.equipment, {
                                'label': 'Équipement',
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                                'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                            }) }}
                        </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            {{ form_row(form.movementDate, {
                                'label': 'Date du mouvement',
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                                'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                            }) }}
                        </div>
                        <div>
                            {{ form_row(form.reference, {
                                'label': 'Référence',
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                                'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                            }) }}
                        </div>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                       <div>
                        {{ form_row(form.expiryDate, {
                            'label': 'Date d\'expiration',
                            'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                            'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                        }) }}
                    </div>
                    {# batchNumber #}
                    <div>
                        {{ form_row(form.batchNumber, {
                            'label': 'N° de lot',
                            'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                            'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                        }) }}
                    </div>
                    </div>
                    {# location #}
                    <div>
                        {{ form_row(form.location, {
                            'label': 'Emplacement',
                            'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                            'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm'}
                        }) }}
                    </div>

                    <div>
                        {{ form_row(form.reason, {
                            'label': 'Raison',
                            'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-200'},
                            'attr': {'class': 'mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:text-white', 'rows': 3}
                        }) }}
                    </div>

                 

                    <div class="flex justify-end space-x-3">
                        <a href="{{ path('movement_index') }}" 
                           class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 shadow-sm text-sm font-medium rounded-md text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
                            Annuler
                        </a>
                        <button type="submit" 
                                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
                            Enregistrer
                        </button>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const categoryField = document.querySelector('[data-category-target]');
        const equipmentField = document.querySelector('[data-equipment-target]');
        const typeField = document.querySelector('#movement_type');
        const quantityField = document.querySelector('#movement_quantity');

        categoryField.addEventListener('change', function () {
            const categoryId = this.value;

            fetch('/equipments/by-category/' + categoryId)
                .then(response => response.json())
                .then(data => {
                    equipmentField.innerHTML = '<option value="">Sélectionner un équipement</option>';
                    data.forEach(equipment => {
                        const option = document.createElement('option');
                        option.value = equipment.id;
                        option.textContent = equipment.name;
                        equipmentField.appendChild(option);
                    });
                })
                .catch(error => console.error('Erreur lors de la récupération des équipements :', error));
        });

        // Validation for movement type and quantity
        typeField.addEventListener('change', validateMovement);
        quantityField.addEventListener('change', validateMovement);
        quantityField.addEventListener('input', validateMovement);

        function validateMovement() {
            const type = typeField.value;
            const quantity = parseInt(quantityField.value);
            const submitButton = document.querySelector('button[type="submit"]');

            if (type === '') {
                submitButton.disabled = true;
                return;
            }

            if (isNaN(quantity) || quantity <= 0) {
                submitButton.disabled = true;
                quantityField.setCustomValidity('La quantité doit être supérieure à 0');
            } else {
                submitButton.disabled = false;
                quantityField.setCustomValidity('');
            }
            quantityField.reportValidity();
        }

        // Initial validation
        validateMovement();
    });
</script>
{% endblock %}
