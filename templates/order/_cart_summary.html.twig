{% if cart|length > 0 %}
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6">
        <h3 class="text-lg font-medium text-gray-900 dark:text-gray-200 mb-4">Résumé du panier</h3>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-800">
                    <tr>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase dark:text-gray-200">Article</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase dark:text-gray-200">Quantité</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase dark:text-gray-200">Prix unitaire</th>
                        <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase dark:text-gray-200">Total</th>
                        <th class="px-2 py-3 text-right text-xs font-medium text-gray-500 uppercase dark:text-gray-200">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                    {% set cartTotal = 0 %}
                    {% for equipmentId, item in cart %}
                        {% set cartTotal = cartTotal + item.totalPrice %}
                        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                            <td class="px-2 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="">
                                        <div class="text-sm font-medium text-gray-900 dark:text-gray-200">{{ item.name|striptags|slice(0, 11) ~ '...' }}</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                                <div class="flex items-center space-x-2">
                                    <button type="button" 
                                            onclick="decrementQuantity(this)"
                                            class="w-8 h-8 rounded-md bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 flex items-center justify-center text-gray-600 dark:text-gray-300 focus:outline-none transition-colors duration-150 disabled:opacity-50 disabled:cursor-not-allowed"
                                            {% if item.quantity <= 1 %}disabled{% endif %}>
                                        <i class="fas fa-minus text-xs"></i>
                                    </button>
                                    
                                    <form action="{{ path('order_update_cart_quantity', {'equipmentId': equipmentId}) }}" 
                                          method="post" 
                                          class="inline-flex items-center"
                                          id="quantity-form-{{ equipmentId }}">
                                        <input type="number" 
                                               name="quantity" 
                                               value="{{ item.quantity }}" 
                                               min="1" 
                                               max="99"
                                               class="w-16 px-2 py-1 text-center border border-gray-300 dark:border-gray-600 rounded-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-200 text-sm">
                                    </form>
                                    
                                    <button type="button"
                                            onclick="incrementQuantity(this)"
                                            class="w-8 h-8 rounded-md bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 flex items-center justify-center text-gray-600 dark:text-gray-300 focus:outline-none transition-colors duration-150 disabled:opacity-50 disabled:cursor-not-allowed"
                                            {% if item.quantity >= 99 %}disabled{% endif %}>
                                        <i class="fas fa-plus text-xs"></i>
                                    </button>
                                </div>
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                                ${{ item.unitPrice|number_format(2) }}
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-sm text-right text-gray-500 dark:text-gray-400">
                                ${{ item.totalPrice|number_format(2) }}
                            </td>
                            <td class="px-4 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <a href="{{ path('order_remove_from_cart', {'equipmentId': equipmentId}) }}" class="text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-500">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
                <tfoot class="bg-gray-50 dark:bg-gray-800">
                    <tr>
                        <td colspan="3" class="px-4 py-4 text-right text-sm font-medium text-gray-900 dark:text-gray-200">Sous-total:</td>
                        <td colspan="2" class="px-4 py-4 text-right text-sm font-medium text-gray-900 dark:text-gray-200">${{ cartTotal|number_format(2) }}</td>
                    </tr>
                    <tr>
                        <td colspan="3" class="px-4 py-4 text-right text-sm font-medium text-gray-900 dark:text-gray-200">TVA (20%):</td>
                        <td colspan="2" class="px-4 py-4 text-right text-sm font-medium text-gray-900 dark:text-gray-200">${{ (cartTotal * 0.20)|number_format(2) }}</td>
                    </tr>
                    <tr>
                        <td colspan="3" class="px-4 py-4 text-right text-sm font-bold text-gray-900 dark:text-gray-200">Total:</td>
                        <td colspan="2" class="px-4 py-4 text-right text-sm font-bold text-gray-900 dark:text-gray-200">${{ (cartTotal * 1.20)|number_format(2) }}</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
{% else %}
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 mb-6 text-center">
        <i class="fas fa-shopping-cart text-gray-400 dark:text-gray-200 text-4xl mb-4"></i>
        <p class="text-gray-500 dark:text-gray-400">Votre panier est vide</p>
    </div>
{% endif %}

<script>
function decrementQuantity(button) {
    const form = button.nextElementSibling;
    const input = form.querySelector('input[type="number"]');
    const currentValue = parseInt(input.value);
    if (currentValue > 1) {
        input.value = currentValue - 1;
        form.submit();
    }
}

function incrementQuantity(button) {
    const form = button.previousElementSibling;
    const input = form.querySelector('input[type="number"]');
    const currentValue = parseInt(input.value);
    if (currentValue < 99) {
        input.value = currentValue + 1;
        form.submit();
    }
}

// Auto-submit form when input changes
document.querySelectorAll('input[name="quantity"]').forEach(input => {
    input.addEventListener('change', function() {
        let value = parseInt(this.value);
        if (isNaN(value)) value = 1;
        value = Math.max(1, Math.min(99, value));
        this.value = value;
        this.form.submit();
    });
});

document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchProducts');
    const categoryFilter = document.getElementById('categoryFilter');
    const productRows = document.querySelectorAll('#productList tr');

    function filterProducts() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedCategory = categoryFilter.value;

        productRows.forEach(row => {
            const productName = row.querySelector('.text-gray-900').textContent.toLowerCase();
            const categoryId = row.dataset.category;
            const matchesSearch = productName.includes(searchTerm);
            const matchesCategory = !selectedCategory || categoryId === selectedCategory;

            row.style.display = matchesSearch && matchesCategory ? '' : 'none';
        });
    }

    searchInput.addEventListener('input', filterProducts);
    categoryFilter.addEventListener('change', filterProducts);
});
</script>