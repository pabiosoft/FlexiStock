{% extends 'base.html.twig' %}

{% block title %}Create Order{% endblock %}

{% block body %}
<div class="container mx-auto p-6 bg-white shadow-md rounded-lg">
    <h1 class="text-3xl font-bold mb-6 text-gray-800">Create a New Order</h1>

    {# Flash messages for success or errors #}
    {% for message in app.flashes('error') %}
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            {{ message }}
        </div>
    {% endfor %}

    {% for message in app.flashes('success') %}
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            {{ message }}
        </div>
    {% endfor %}

    {# Start the order form #}
    {{ form_start(form) }}
    
    {# Supplier and Customer Inputs #}
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
        <div class="form-group">
            {{ form_label(form.supplier, null, {'class': 'block text-sm font-medium text-gray-700'}) }}
            {{ form_widget(form.supplier, {'attr': {'class': 'form-input mt-1 block w-full rounded-md shadow-sm border-gray-300'}}) }}
            {{ form_errors(form.supplier) }}
        </div>
        <div class="form-group">
            {{ form_label(form.customer, null, {'class': 'block text-sm font-medium text-gray-700'}) }}
            {{ form_widget(form.customer, {'attr': {'class': 'form-input mt-1 block w-full rounded-md shadow-sm border-gray-300'}}) }}
            {{ form_errors(form.customer) }}
        </div>
    </div>

    {# Status and Order Date Inputs #}
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2 mt-4">
        <div class="form-group">
            {{ form_label(form.status, null, {'class': 'block text-sm font-medium text-gray-700'}) }}
            {{ form_widget(form.status, {'attr': {'class': 'form-input mt-1 block w-full rounded-md shadow-sm border-gray-300'}}) }}
            {{ form_errors(form.status) }}
        </div>
        <div class="form-group">
            {{ form_label(form.orderDate, null, {'class': 'block text-sm font-medium text-gray-700'}) }}
            {{ form_widget(form.orderDate, {'attr': {'class': 'form-input mt-1 block w-full rounded-md shadow-sm border-gray-300'}}) }}
            {{ form_errors(form.orderDate) }}
        </div>
    </div>

    {# Order Items Table #}
    <div class="form-group mt-6">
        <h3 class="text-xl font-semibold mb-4 text-gray-700">Order Items</h3>
        <div class="overflow-x-auto">
            <table class="min-w-full bg-white border border-gray-300 rounded-lg">
                <thead class="bg-gray-200">
                    <tr>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Equipment</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Quantity</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Unit Price</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody data-collection-holder data-prototype="{{ form_widget(form.items.vars.prototype)|e('html') }}">
                    {% for item in form.items %}
                        <tr>
                            <td class="border px-4 py-2">{{ form_widget(item.equipment, {'attr': {'class': 'form-input rounded-md shadow-sm border-gray-300'}}) }}</td>
                            <td class="border px-4 py-2">{{ form_widget(item.quantity, {'attr': {'class': 'form-input rounded-md shadow-sm border-gray-300'}}) }}</td>
                            <td class="border px-4 py-2">{{ form_widget(item.unitPrice, {'attr': {'class': 'form-input rounded-md shadow-sm border-gray-300'}}) }}</td>
                            <td class="border px-4 py-2">
                                <button type="button" class="bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded remove-item">Remove</button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <button type="button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4 add-item">Add Item</button>
    </div>

    {# Submit button for the order #}
    <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-6">Submit Order</button>

    {# End the form #}
    {{ form_end(form) }}
</div>

{# JavaScript to dynamically add/remove items from the form #}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const addItemButton = document.querySelector('.add-item');
        const collectionHolder = document.querySelector('[data-collection-holder]');
        
        addItemButton.addEventListener('click', () => {
            const prototype = collectionHolder.dataset.prototype;
            const index = collectionHolder.dataset.index || collectionHolder.children.length;

            const newForm = prototype.replace(/__name__/g, index);

            collectionHolder.insertAdjacentHTML('beforeend', `<tr>${newForm}</tr>`);
            collectionHolder.dataset.index = parseInt(index) + 1;  // Update index for next item
        });

        collectionHolder.addEventListener('click', (e) => {
            if (e.target.classList.contains('remove-item')) {
                e.target.closest('tr').remove();  // Remove the item row when the remove button is clicked
            }
        });
    });
</script>
{% endblock %}
