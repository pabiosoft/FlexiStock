{# Inventory Forecast Report Template #}
{% if report.forecasts %}
<div class="space-y-6">
    <!-- Forecast Summary -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 class="text-sm font-medium text-gray-500">Projected Stock Value</h3>
            <p class="mt-2 text-3xl font-semibold text-gray-900">${{ report.summary.projectedValue|number_format(2) }}</p>
            <p class="text-sm text-gray-500 mt-1">Next 30 Days</p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 class="text-sm font-medium text-gray-500">Expected Stock-outs</h3>
            <p class="mt-2 text-3xl font-semibold text-gray-900">{{ report.summary.expectedStockouts }}</p>
            <p class="text-sm text-gray-500 mt-1">Items at Risk</p>
        </div>
        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h3 class="text-sm font-medium text-gray-500">Recommended Orders</h3>
            <p class="mt-2 text-3xl font-semibold text-gray-900">{{ report.summary.recommendedOrders }}</p>
            <p class="text-sm text-gray-500 mt-1">Items to Reorder</p>
        </div>
    </div>

    <!-- Forecast Charts -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Demand Forecast Chart -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Demand Forecast</h3>
            </div>
            <div class="p-6">
                <canvas id="demandForecastChart" class="w-full h-64"></canvas>
            </div>
        </div>

        <!-- Stock Level Predictions -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Stock Level Predictions</h3>
            </div>
            <div class="p-6">
                <canvas id="stockPredictionsChart" class="w-full h-64"></canvas>
            </div>
        </div>
    </div>

    <!-- Critical Items -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Critical Items Forecast</h3>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Item</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Current Stock</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Projected Stock</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Days Until Stockout</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Recommended Order</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    {% for item in report.criticalItems %}
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                {{ item.name }}
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {{ item.currentStock }}
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {{ item.projectedStock }}
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                    {% if item.daysUntilStockout < 7 %}
                                        bg-red-100 text-red-800
                                    {% elseif item.daysUntilStockout < 14 %}
                                        bg-yellow-100 text-yellow-800
                                    {% else %}
                                        bg-green-100 text-green-800
                                    {% endif %}">
                                    {{ item.daysUntilStockout }} days
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {{ item.recommendedOrder }}
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Demand Forecast Chart
    const demandCtx = document.getElementById('demandForecastChart').getContext('2d');
    new Chart(demandCtx, {
        type: 'line',
        data: {
            labels: {{ report.forecasts.dates|json_encode|raw }},
            datasets: [{
                label: 'Predicted Demand',
                data: {{ report.forecasts.predictedDemand|json_encode|raw }},
                borderColor: 'rgb(59, 130, 246)',
                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                tension: 0.4
            }, {
                label: 'Actual Demand',
                data: {{ report.forecasts.actualDemand|json_encode|raw }},
                borderColor: 'rgb(107, 114, 128)',
                backgroundColor: 'rgba(107, 114, 128, 0.1)',
                tension: 0.4
            }]
        },
        options: {
            responsive: true,
            interaction: {
                intersect: false,
                mode: 'index'
            }
        }
    });

    // Stock Predictions Chart
    const stockCtx = document.getElementById('stockPredictionsChart').getContext('2d');
    new Chart(stockCtx, {
        type: 'line',
        data: {
            labels: {{ report.forecasts.dates|json_encode|raw }},
            datasets: [{
                label: 'Predicted Stock Levels',
                data: {{ report.forecasts.predictedStock|json_encode|raw }},
                borderColor: 'rgb(16, 185, 129)',
                backgroundColor: 'rgba(16, 185, 129, 0.1)',
                tension: 0.4,
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                annotation: {
                    annotations: {
                        line1: {
                            type: 'line',
                            yMin: {{ report.forecasts.safetyStock }},
                            yMax: {{ report.forecasts.safetyStock }},
                            borderColor: 'rgb(239, 68, 68)',
                            borderWidth: 2,
                            borderDash: [6, 6],
                            label: {
                                content: 'Safety Stock Level',
                                enabled: true
                            }
                        }
                    }
                }
            }
        }
    });
});
</script>
{% else %}
<div class="text-center py-12">
    <i class="fas fa-chart-line text-gray-400 text-5xl mb-4"></i>
    <p class="text-gray-500">No forecast data available</p>
</div>
{% endif %}